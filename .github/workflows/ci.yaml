name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  code_quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8 (Code Quality Check)
        run: flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics

  docker_build:
    runs-on: ubuntu-latest
    needs: code_quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image with GitHub SHA tag
        run: |
          docker build -t jmuachifi/sre-challenge-fluxcd:latest -t jmuachifi/sre-challenge-fluxcd:${{ github.sha }} .
    #   - name: Check Docker Images (for debug)
    #     run: docker images
  security_check:
        runs-on: ubuntu-20.04
        needs: docker_build
        steps:
          - name: Checkout code
            uses: actions/checkout@v2
    
          - name: Ensure Docker image is built or exists
            run: |
              IMAGE_EXISTS=$(docker images -q jmuachifi/sre-challenge-fluxcd:${{ github.sha }})
              if [ -z "$IMAGE_EXISTS" ]; then
                echo "Image not found locally, building..."
                docker build -t jmuachifi/sre-challenge-fluxcd:latest -t jmuachifi/sre-challenge-fluxcd:${{ github.sha }} .
              else
                echo "Image found locally, proceeding with Trivy scan."
              fi
    
          - name: Run Trivy vulnerability scanner
            uses: aquasecurity/trivy-action@0.20.0
            with:
              image-ref: 'jmuachifi/sre-challenge-fluxcd:${{ github.sha }}'
              format: 'table'
              exit-code: '1'
              ignore-unfixed: true
              vuln-type: 'os,library'
              severity: 'CRITICAL,HIGH'
    
        #   - name: List Docker images (for debug)
        #     run: docker images
  docker_publish:
            runs-on: ubuntu-latest
            needs: security_check
            steps:
              - name: Log in to Docker Hub
                run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        
              - name: Ensure Docker image exists or build it
                run: |
                  IMAGE_EXISTS=$(docker images -q jmuachifi/sre-challenge-fluxcd:${{ github.sha }})
                  if [ -z "$IMAGE_EXISTS" ]; then
                    echo "Image not found locally, building..."
                    docker build -t jmuachifi/sre-challenge-fluxcd:latest -t jmuachifi/sre-challenge-fluxcd:${{ github.sha }} -f Dockerfile .
                  else
                    echo "Image found locally, proceeding with Docker push."
                  fi
        
              - name: Push Docker image (latest and SHA tag)
                run: |
                  # Push both the latest and the commit SHA tagged images
                  docker push jmuachifi/sre-challenge-fluxcd:latest
                  docker push jmuachifi/sre-challenge-fluxcd:${{ github.sha }}
                working-directory: .